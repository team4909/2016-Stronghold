// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4909.Bionics2016.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc4909.Bionics2016.Robot;

/**
 *
 */
public class Intake extends Command {
	private int count;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Intake() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.shooter);
        requires(Robot.feeder);

        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.shooter.setShooterWheels(-0.6);
    	count = 0;
    	//Robot.feeder.retract();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	count++;
    	
    	Robot.feeder.feedIn();
    	Robot.shooter.setShooterWheels(-0.6);
    	SmartDashboard.putNumber("counter", count);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished()
    {
    	boolean disableIntakeSwitch = SmartDashboard.getBoolean("DisableIntakeSwitch", false);
    	if(disableIntakeSwitch)
    	{
    		return false;
    	}
    	return Robot.feeder.getFeedSwitch();
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.shooter.setShooterWheels(0);
    	Robot.feeder.stopFeed();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
